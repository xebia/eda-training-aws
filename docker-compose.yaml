version: '2.1'

services:
  localstack:
    image: localstack/localstack:0.10.9
    ports:
      - "4567-4593:4567-4593"
      - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    environment:
      - SERVICES=sqs,sns,kinesis,dynamodb,cloudwatch,lambda,apigateway,s3,firehose
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-1
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=docker-reuse
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  order-db:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=orders
      - POSTGRES_PASSWORD=supergeheim
      - POSTGRES_DB=orders
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "orders"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
  order-system:
    image: upeter/order-system:latest
    environment:
    - INVENTORY_SYSTEM_URI=http://inventory-system:9010
    - CRM_SYSTEM_URI=http://crm-system:9020
    - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/orders
    - AWS_ACCESS_KEY=dummy
    - AWS_SECRET_KEY=dummy
    depends_on:
      order-db:
        condition: service_healthy
    ports:
    - 9000:9000
  inventory-db:
    image: postgres:9.6
    environment:
    - POSTGRES_USER=inventory
    - POSTGRES_PASSWORD=supergeheim
    - POSTGRES_DB=inventory
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "inventory"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 5431:5432
  inventory-system:
    image: upeter/inventory-system:latest
    environment:
    - ORDER_SYSTEM_URI=http://order-system:9000
    - SPRING_DATASOURCE_URL=jdbc:postgresql://inventory-db:5432/inventory
    - AWS_ACCESS_KEY=dummy
    - AWS_SECRET_KEY=dummy
    depends_on:
      inventory-db:
        condition: service_healthy
    ports:
    - 9010:9010
  crm-db:
    image: postgres:9.6
    environment:
    - POSTGRES_USER=crm
    - POSTGRES_PASSWORD=supergeheim
    - POSTGRES_DB=crm
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "crm"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 5430:5432
  crm-system:
    image: upeter/crm-system:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://crm-db:5432/crm
    depends_on:
      crm-db:
        condition: service_healthy
    ports:
    - 9020:9020
